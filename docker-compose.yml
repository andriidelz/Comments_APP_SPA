
services:
  db:
    image: postgres:13
    container_name: comments_app_db
    environment:
      POSTGRES_DB: comments_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis:6
    container_name: comments_app_redis
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    container_name: comments_app_backend
    command: ["/app/entrypoint.sh"]
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
    environment:
      RUN_MAIN: "true"
      POSTGRES_DB: comments_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0

  celery:
    build: ./backend
    container_name: comments_app_celery
    command: celery -A comments_app worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    environment:
      POSTGRES_DB: comments_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0

  frontend:
    build: ./frontend
    container_name: comments_app_frontend
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=http://localhost:8000
    # develop:
    #   watch:
    #   - action: rebuild
    #     path: ./frontend

volumes:
  postgres_data: